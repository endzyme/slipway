syntax = "proto3";

package slipway;

// option go_package = "github.com/endzyme/telephone/protobuf/krbrnrtr";

service Cluster {
    rpc ListMembers (MembersRequest) returns (MembersResponse);
    // rpc GetLogs (GetLogsRequest) returns (stream GetLogsResponse);
}

service CliKubernetesCluster {
    rpc Initialize (InitRequest) returns (stream InitResponse);
    rpc GetBootstrapToken (BootstrapTokenRequest) returns (BootstrapTokenResponse);
    rpc UploadCertificates (UploadCertsRequest) returns (UploadCertsResponse);
    // rpc ReplaceCertificates (ReplaceCertificatesRequest) returns (stream ReplaceCertificatesResponse);
    // rpc KubeadmCommand (KubeadmRequest) returns (stream KubeadmResponse)
}

service KubernetesNode {
    rpc GetBootstrapToken (BootstrapTokenRequest) returns (BootstrapTokenResponse);
    rpc BootstrapMaster (BootstrapMasterRequest) returns (BootstrapTokenResponse);
}

message MembersRequest {}

message MembersResponse {
    HandlerMember hanlder = 1;
    repeated ClusterMember result = 2;
}

message ClusterMember {
    string id = 1;
    string hostname = 2;
    repeated string labels = 3;
    string ip_address = 4;
}

message InitRequest {
    // 1 - 15: Core Cluster Settings
    // 16 - 50: Extra Cluster Settings
    // 51 - 90: Config File Yamls, Cert and other files
    // 91 - 60: Run Params Other Extas
    bool dry_run = 1;
    string cluster_dns_domain = 2;
    string control_plane_url = 3;
    string cluster_cni = 4;
    string pod_cidr = 5;
    string service_cidr = 6;
    repeated string extra_kubeadm_flags = 15;
    bytes yaml_cluster_configuration = 51;
}

message InitResponse {
    HandlerMember hanlder = 1;
    string handled_by = 2;
    bytes log_stream = 3;
}

message BootstrapTokenRequest {
    string dry_run = 1;
    string time_to_live = 2;
    string description = 3;
    string groups_override = 4;
    string usages_override = 5;
}

message BootstrapTokenResponse {
    HandlerMember hanlder = 1;
    string raw_join_command = 2;
}

message BootstrapMasterRequest {
    string dry_run = 1;
    string time_to_live = 2;
    string description = 3;
    string encryption_key = 4;
    bool skip_upload_certificates = 5;
}

message UploadCertsRequest {}

message UploadCertsResponse {
    HandlerMember hanlder = 1;
}

message HandlerMember {
    string request_id = 1;
    ClusterMember member = 2;
}